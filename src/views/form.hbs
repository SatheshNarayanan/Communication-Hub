<body>
  <form class="container my-5" id="mail-form" action="{{action}}" method="{{method}}" _method="{{method}}">

    <div class="row">
      <div class="form-group col-lg-4">
        <label for="sendVia" class=" my-1 text-center">Send Via</label>
        <select class="form-control " id="sendVia" name="sendVia">
          <option value="SMS"  {{#if (ifEquality data.sendvia "SMS")}} selected {{/if}}>SMS</option>
          <option value="Email" {{#if (ifEquality data.sendvia "Email")}} selected {{/if}}>Email</option>
        </select>
      </div>

      <div class="form-group col-lg-4">
        <label for="dataSource" class=" my-1 text-center">Data Source</label>
        <select class="form-control " id="dataSource" name="dataSource">
          <option value="Edit here" {{#if (ifEquality data.datasource "Edit here")}} selected {{/if}}>Edit here</option>
          <option value="RDBMS" {{#if (ifEquality data.datasource "RDBMS")}} selected {{/if}}>RDBMS</option>
        </select>
      </div>
      <div class="col-lg-1"></div>
      <a href="/schedule" class="col-lg-1 my-2"> Schedule </a>
      <div class="col-lg-1"></div>
      <a href="/logout" class="col-lg-1 my-2"> Logout </a>

    </div>
    {{#if (ifEquality data.datasource "Edit here")}}
    <div class="form-group" id="rdbmsHide">
      <label for="To">To</label>
      <input type="text" class="form-control " id="To" name="To" placeholder="Email/Phone Number" value="{{data.to}}">
      <div class="invalid-feedback"> Please enter sending email address or Phone Number </div>
    </div>
    {{/if}}

  
    <div id="rdbmsVisi" {{#if (ifEquality data.datasource "Edit here")}} style="display: none" {{/if}}>
      <div class="form-group" id="rdbmsHide">
        <label for="connectionString">Connection string</label>
        <input type="text" name="connectionString" class="form-control" id="connectionSting" value="{{data.connectionstring}}"
          placeholder="To connect to RDBMS">
      </div>

      <div class="form-group ">
        <label for="query">Query</label>
        <textarea rows="6" class="form-control" id="query" name="query" placeholder="Query for getting data from rdbms" >{{data.query}}</textarea>
      </div>
    </div>
    

    <div class="form-group">
      <label for="formGroupExampleInput">Subject</label>
      <input type="text" class="form-control" id="subject" name="subject" placeholder="subject" value="{{data.subject}}">
    </div>
    
    <div class="form-group ">
        <label for="template" class=" my-1 text-center">Template</label>
        <select class="form-control " id="template" name="template">
          <option value="none" >None</option>
          <option value="sms1" >SMS Template 1</option>
          <option value="sms2" >SMS Template 2</option>
          <option value="mail1">Mail Template 1</option>
          <option value="mail2">Mail Template 2</option>
        </select>
    </div>

    <div class="form-group ">
      <label for="body">Body</label>
      <textarea rows="10" value="{{data.body}}" class="form-control" id="body" name="body"
        placeholder="Content that you wanna send">{{data.body}}</textarea>
    </div>
    <input type="hidden" id="hiddenSchedule" value="{{data.scheduleid}}"/>
    <div class="row">
      <div class="col-lg-4"></div>
      <button type="submit" class=" btn btn-primary my-2 mx-2">Start Sending</button>
      <div class="col-lg-2"></div>
      <button type="button" class="  btn btn-success my-2 mx-2" id="save">Save</button>
      <div class="col-lg-2"></div>
    </div>
  </form>

  <script>

    const dataSource = document.getElementById("dataSource")
    const template = document.getElementById("template")
    const saveSchedule = document.getElementById("save")
    const hiddenSchedule = document.getElementById("hiddenSchedule")
    const tempData = {
      'sms1' : "Peekaboo and Im gonna spam you...",
      'sms2' : "I want to spam you",
      'mail1': "Dear Someone, lets have a meeting",
      'mail2': "Hello, I dont have any content",
      "none" : ""
    }

    template.addEventListener("change", () => {
      document.getElementById("body").innerHTML= tempData[template.value]
    })

    saveSchedule.addEventListener("click", () => {
      const formData = new FormData($mailform);
      let userDetail = {};
      for (const fields of formData.entries()) {
        const [key, value] = fields;
        userDetail[key] = value;
      }
       const config = {
        method: "POST",
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({...userDetail,hiddenSchedule : hiddenSchedule.value})
      }
      fetch("/saveSchedule", config)
        .then(response => {
          if (response.status === 200) {
            return response.json()
          } else {
            throw (new Error(response.status))
          }
        }
        ).then(data => {
          //alert(data.message)
          swal("Success", "The Message has been sent", "success");
        })
        .catch(error => {
          switch (error.message) {
            case "400":
              swal("Warning", "Please check form values", "warning");
              break;
            case "500":
              swal("Error", "Please try after some time", "error");
              break;
            default:
              console.log(error);
          }
        })
    })

    dataSource.addEventListener("change", () => {
      if (dataSource.value === 'RDBMS') {
        const remove = document.getElementById("rdbmsHide")
        remove.setAttribute("style", "display: none;")
        const add = document.getElementById("rdbmsVisi")
        add.setAttribute("style", "display: block;")
      } else {
        const remove = document.getElementById("rdbmsHide")
        remove.setAttribute("style", "display: block;")
        const add = document.getElementById("rdbmsVisi")
        add.setAttribute("style", "display: none;")
      }
    })

    const $mailform = document.querySelector("#mail-form");

    $mailform.addEventListener("submit", event => {
      event.preventDefault();

      const To = document.getElementById('To')

      if (dataSource.value === 'Edit here' && To.value.length < 1) {
        To.setAttribute("class", "form-control is-invalid")
        return false;
      }
      const submitUrl = $mailform.action;
      const submitMethod = $mailform.getAttribute("_method");
      const formData = new FormData($mailform);
      let userDetail = {};
      for (const fields of formData.entries()) {
        const [key, value] = fields;
        userDetail[key] = value;
      }

      const config = {
        method: submitMethod.toUpperCase(),
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(userDetail)
      }

      console.log(config, submitUrl)
      fetch(submitUrl, config)
        .then(response => {
          if (response.status === 200) {
            return response.json()
          } else {
            throw (new Error(response.status))
          }
        }
        ).then(data => {
          //alert(data.message)
          swal("Success", "The Message has been sent", "success");
        })
        .catch(error => {
          switch (error.message) {
            case "400":
              swal("Warning", "Please check form values", "warning");
              break;
            case "500":
              swal("Error", "Please try after some time", "error");
              break;
            default:
              console.log(error);
          }
        })
    });

  </script>
</body>